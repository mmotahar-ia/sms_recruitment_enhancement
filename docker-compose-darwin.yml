# export UID; export GID=`id -g`; docker-compose up

version: '3.0'
services:

  db:
    image: docker-hub.trobz.com:443/odoo/postgres:latest
    environment:
      - POSTGRES_USER=openerp
      - POSTGRES_PASSWORD=openerp
      - USER_ID=$UID
    networks:
      default:
        aliases:
          - db
    ports:
      - 127.0.0.1:8032:5432
    #command: gosu postgres postgres -c log_directory='/tmp/pg_log' -c logging_collector=on -c log_statement=all

    volumes:
      - ./log/postgresql:/tmp/pg_log
    command: gosu postgres postgres -c logging_collector=on -c log_directory='/tmp/pg_log'

  odoo:
    image: docker-hub.trobz.com:443/dev/trobz-odoo-project:1.0
    command: bash -c "/opt/openerp/openerp-sms-dev/odoo/odoo-bin $UPDATE_MODULES $UPDATE_DATABASE --db_host db --config /opt/openerp/openerp-sms-dev/config/dev.conf --data-dir /opt/openerp/openerp-sms-dev/var/storage --test-enable --load web,trobz_base --addons-path /opt/openerp/openerp-sms-dev/addons/odoo-enterprise,/opt/openerp/openerp-sms-dev/addons/server-ux,/opt/openerp/openerp-sms-dev/project,/opt/openerp/openerp-sms-dev/odoo/addons --logfile /opt/openerp/openerp-sms-dev/log/odoo/server.log"
    environment:
      - USER=openerp
      - USER_ID=1000                                                           # sys_platform == 'darwin'
      - WDB_SOCKET_SERVER=wdb
      - WDB_NO_BROWSER_AUTO_OPEN=True
      # requests comes with its own bundle: /usr/local/lib/python2.7/dist-packages/requests/cacert.pem
      # use the system bundle instead:
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

    networks:
      default:
        aliases:
          - odoo
    ports:
      - 127.0.0.1:18069:8069
    depends_on:
      - db
    privileged: true
    volumes:
      - ./:/opt/openerp/openerp-sms-dev

  nginx:
    image: docker-hub.trobz.com:443/dev/nginx:latest
    volumes:
      - ./log/nginx:/var/log/nginx
    networks:
      default:
        aliases:
          - nginx
          - sms.trobz.test
    ports:
      - "127.0.0.1:80:8080"                                                    # sys_platform == 'darwin'
      - "127.0.0.1:443:8443"                                                   # sys_platform == 'darwin'
      - "127.0.0.1:1984:1984"
      - "127.0.0.1:8025:8025"
    user: $UID:$GID
    tmpfs:
      - /var/cache/nginx:uid=$UID
      - /run:uid=$UID
    depends_on:
      - odoo
    environment:
    # odoo:8069
      - ODOO=odoo
      # 8069 if odoo is running in multi-threaded mode
      # 8072 if odoo is running in multi-workers mode
      - ODOO_PORT=8069
      - ODOO_LONGPOLLING_PORT=8072
      - NGINX_HOST=sms.trobz.test
      - ODOO_DBFILTER=^odoo\Z
    # tell envsubst which variables to substitute, to avoid breaking $http_host and others
    # see https://github.com/docker-library/docs/issues/496
    command: /bin/bash -c "envsubst '$${ODOO} $${ODOO_PORT} $${ODOO_LONGPOLLING_PORT} $${NGINX_HOST} $${ODOO_DBFILTER}' < /etc/nginx/conf.d/odoo.conf.template > /etc/nginx/conf.d/odoo.conf && envsubst '$${ODOO} $${NGINX_HOST}' < /etc/nginx/conf.d/catchall.conf.template > /etc/nginx/conf.d/catchall.conf && cat /etc/nginx/conf.d/odoo.conf && exec nginx -g 'daemon off;'"
    #command: nginx -t

  smtp:
    image: docker-hub.trobz.com:443/dev/mail:latest
    networks:
      default:
        aliases:
          - smtp
          - smtp.trobz.test
    volumes:
      - ./log/mail:/var/log/mailhog
    environment: # https://github.com/mailhog/MailHog/blob/master/docs/CONFIG.md
      - MH_SMTP_BIND_ADDR=0.0.0.0:1025
      - MH_HOSTNAME=mail.trobz.test
      - USER_ID=1000                                                           # sys_platform == 'darwin'

  wdb:
    image: kozea/wdb:latest
    networks:
      default:
        aliases:
          - wdb

networks:
  default:
    driver: bridge